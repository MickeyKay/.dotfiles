{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 4303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "micktastic/installation/install.sh",
			"settings":
			{
				"buffer_size": 2320,
				"line_ending": "Unix",
				"name": "#"
			}
		},
		{
			"file": "micktastic/globals.zsh",
			"settings":
			{
				"buffer_size": 217,
				"line_ending": "Unix",
				"name": "# your project folder that we can `c [tab]` to"
			}
		},
		{
			"contents": "#\n# Functions\n#\n\n# Open hosts file\nhosts() {\n	sudo nano -e /private/etc/hosts\n}\n\n# Flush DNS\nflush() {\n	sudo killall -HUP mDNSResponder\n}\n\n# Show hidden files\nshowFiles() {\n	defaults write com.apple.finder AppleShowAllFiles TRUE\n	killall	Finder\n}\n\n# Hide hidden files\nhideFiles() {\n	defaults write com.apple.finder AppleShowAllFiles FALSE\n	killall Finder\n}\n\n# Toggle hidden files visiblity\ntoggleFiles() {\n\n	# Check if hidden files are visible and store result in a variable\n	isVisible=$(defaults read com.apple.finder AppleShowAllFiles)\n\n	# T   oggle visibility based on variables value\n	if [ $isVisible = FALSE ]\n	then\n		showFiles\n	else\n		hideFiles\n	fi\n\n}",
			"file": "micktastic/functions.zsh",
			"file_size": 654,
			"file_write_time": 1407483303000000,
			"settings":
			{
				"buffer_size": 657,
				"line_ending": "Unix",
				"name": "# Commands"
			}
		},
		{
			"file": "micktastic/git/completions.zsh",
			"settings":
			{
				"buffer_size": 70,
				"line_ending": "Unix",
				"name": "_git_delb()"
			}
		},
		{
			"contents": "#\n# Git Aliases\n#\n\nalias gcr=\"git clone --recursive\"\n",
			"file": "micktastic/git/aliases.zsh",
			"file_size": 53,
			"file_write_time": 1407483503000000,
			"settings":
			{
				"buffer_size": 53,
				"line_ending": "Unix",
				"name": "#"
			}
		},
		{
			"file": "micktastic/directories/aliases.zsh",
			"settings":
			{
				"buffer_size": 263,
				"line_ending": "Unix"
			}
		},
		{
			"file": "micktastic/svn/aliases.zsh",
			"settings":
			{
				"buffer_size": 72,
				"line_ending": "Unix",
				"name": "#"
			}
		},
		{
			"file": "micktastic/directories/functions.zsh",
			"settings":
			{
				"buffer_size": 387,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 130 files for \"vvv\"\n\n/Users/mickey/.dotfiles/bin/vvv-site-wizard/README.md:\n    1: # VVV Site Wizard\n    2  \n    3  Version 1.1.3\n    4  \n    5: This bash script makes it easy to spin up a new WordPress site using [Varying Vagrant Vagrants](https://github.com/Varying-Vagrant-Vagrants/VVV).\n    6  \n    7  > ## Develop Branch\n    8  >\n    9: > The develop branch contains the latest and greatest updates, but is not necessarily stable. Updates are merged into master after being tested for a while. [Check it out!](https://github.com/aliso/vvv-site-wizard/tree/develop)\n   10  \n   11  ## Installation\n   12  \n   13: Download the script and run `./vvv` from the directory the script is placed in.\n   14  \n   15: To run the script from anywhere, you can place `vvv` in a folder included in your PATH environment variable.\n   16  \n   17: If you don't want to define the path each time you run the script, open the file and uncomment the line at the top defining `path`. Set that to the root folder of VVV on your machine. **Note:** You do not need to do this if VVV is installed in the default location (`~/vagrant-local/`).\n   18  \n   19  ## Usage\n   20  \n   21: Type `vvv` in the command line to use. None of the options are required: if a required piece of information is not included in the original command, the wizard will prompt you for it.\n   22  \n   23  ### Options\n   ..\n   25  |Option|Name       |Description|\n   26  |------|-----------|-----------|\n   27: |`-a`  |action     |`new`/`create`/`make` runs the site creation wizard, `rm`/`delete`/`teardown` runs the site teardown wizard, `list` lists all current VVV sites|\n   28  |`-d`  |domain     |Desired domain (e.g. mysite.dev)|\n   29  |`-f`  |files only |Do not provision Vagrant, just create the site directory and files|\n   ..\n   31  |`-l`  |live URL   |URL of the live site, currently only used if loading images by proxy|\n   32  |`-n`  |site name  |Desired name for the site directory (e.g. mysite)|\n   33: |`-p`  |path       |Path to VVV root (e.g. ~/vagrant-local)|\n   34  |`-v`  |version    |Version of WordPress to install|\n   35  |`-x`  |debug      |Turn on WP_DEBUG and WP_DEBUG_LOG|\n   ..\n   38  \n   39  ```\n   40: vvv -a new\n   41: vvv -a create -n mysite -d mysite.dev -v 3.9.1 -x\n   42: vvv -a make -fxil mysite.com -n mysite -d mysite.dev -v 3.9.1\n   43: vvv -a delete mysite\n   44: vvv -a list\n   45  ```\n   46  \n   ..\n   50  \n   51  * Halts Vagrant (if running)\n   52: * Creates a web root for the site in the `www` folder containing three files: `vvv-init.sh`, `wp-cli.yml`, and `vvv-hosts`\n   53: 	* `vvv-init.sh` tells Vagrant to create a database if one does not exist and install the latest version of WordPress (via WP-CLI) the next time Vagrant is provisioned\n   54  	* `wp-cli.yml` tells WP-CLI that WordPress is in the htdocs folder\n   55: 	* `vvv-hosts` contains the hosts entry to give your site a nice custom domain (the domain is set in the wizard)\n   56  * Creates a file in the `nginx-config` folder to handle server settings for your site\n   57  * Restarts Vagrant with `vagrant up --provision`\n   58  \n   59: Provisioning Vagrant takes a couple of minutes, but this is a crucial step as it downloads WordPress into your site's htdocs directory and runs the installation. If you want to skip provisioning and install WordPress manually, you can run the new site's `vvv-init.sh` file directly in the Vagrant shell.\n   60  \n   61  ## Site Teardown Wizard\n   ..\n   64  \n   65  * Halts Vagrant (if running)\n   66: * Deletes the site's web root (which deletes the `vvv-init.sh`, `wp-cli.yml`, and `vvv-hosts` files as well)\n   67  * Deletes the file in the `nginx-config` folder pertaining to the site\n   68  \n   ..\n   87  ### 1.1.1\n   88  \n   89: * Add default VVV install path to script (if VVV is installed in default location, `path` no longer needs to be explicitly defined)\n   90  \n   91  ### 1.1\n   92  \n   93: * Add ability to select WordPress version (props [@adamsilverstein](https://github.com/aliso/vvv-site-wizard/pull/10))\n   94  * Add ability to define `WP_DEBUG` and `WP_DEBUG_LOG`\n   95  * Convert positional parameters to command line options for maximum flexibility\n\n/Users/mickey/.dotfiles/bin/vvv-site-wizard/vvv:\n    2  \n    3  # =============================================================================\n    4: # VVV Site Setup Script\n    5  # By Alison Barrett <alison@barre.tt>\n    6: # https://github.com/aliso/vvv-site-wizard\n    7  #\n    8  # Version 1.1.3\n    9  #\n   10  # This script automates the creation & deletion of new WordPress sites using\n   11: # Varying Vagrant Vagrants (https://github.com/Varying-Vagrant-Vagrants/VVV).\n   12  #\n   13  # Usage:\n   14: # vvv [-a create|delete|list] [-n site] [-v version] [-d domain]\n   15: # [-p path/to/vvv] [-f] [-x]\n   16  # =============================================================================\n   17  #\n   18: # When not called from the VVV root directory, the script will prompt the user\n   19: # for the path to VVV. To run this from any directory and skip that prompt,\n   20: # uncomment the following line and set it to the VVV root dir:\n   21: #path=/path/to/vvv/root\n   22  \n   23  # =============================================================================\n   ..\n   25  # =============================================================================\n   26  usage() {\n   27: 	printf \"Usage: vvv [-a create|delete|list] [-n site] [-v version] [-d domain] [-p path/to/vvv] [-f] [-x]\\n\\n\"\\\n   28  \"Options:\\n\"\\\n   29  \"-a   action      Can be create, delete, or list\\n\"\\\n   ..\n   33  \"-l   live URL    URL of the live site, currently only used if loading images by proxy\\n\"\\\n   34  \"-n   site name   Desired name for the site directory (e.g. mysite)\\n\"\\\n   35: \"-p   path        Path to VVV root (e.g. ~/vagrant-local)\\n\"\\\n   36  \"-v   version     Version of WordPress to install\\n\"\\\n   37  \"-x   debug       Turn on WP_DEBUG and WP_DEBUG_LOG\\n\"\\\n   ..\n  164  \n  165  # =============================================================================\n  166: # Get the VVV root directory if the user is entering a valid command\n  167  #\n  168  # This is placed outside of the action conditionals below because setting the\n  ...\n  170  # =============================================================================\n  171  if [[ $action = 'new' || $action = 'make' || $action = 'create' || $action = 'delete' || $action = 'teardown' || $action = 'rm' || $action = 'list' ]]; then\n  172: 	# Get VVV root dir\n  173  	if [ ! -z $path ]; then\n  174  		path=$path\n  ...\n  181  		else\n  182  			while [ -z $path ]; do\n  183: 				read -e -p \"VVV install directory: \" path\n  184  \n  185: 				# Make sure directory is actually a VVV root\n  186  				if [ ! -e \"$path/Vagrantfile\" ]; then\n  187: 					cecho \"Path specified is not a VVV root directory.\" red bold\n  188  					unset path\n  189  				fi\n  ...\n  206  # If you want to see the files that are created without spinning up the new\n  207  # site, use a third parameter of 'filesonly'. Example:\n  208: # vvv [new|create|make] site filesonly\n  209  # =============================================================================\n  210  if [[ $action = 'new' || $action = 'make' || $action = 'create' ]]; then\n  ...\n  214  		files_only_text=\" (file creation only)\"\n  215  	fi\n  216: 	cecho \"\\nNew VVV Site Setup$files_only_text\" blue bold\n  217  \n  218  	# Prompt user for vars\n  ...\n  304  	# =============================================================================\n  305  	cecho \"\\nAbout to perform the following:\" normal bold\n  306: 	echo -e \"* Halt Vagrant (if running)\\n* Create directory $site in $path/www\\n* Create files vvv-init.sh, wp-cli.yml, and vvv-hosts in directory $site\\n* Create file $site.conf in $path/config/nginx-config/sites\"\n  307  	if [[ \"$files_only\" = false ]]; then\n  308  		echo -e \"* Run \\`vagrant up --provision\\` to initialize site\"\n  ...\n  330  	# Start the par-tay\n  331  	# =============================================================================\n  332: 	cecho \"\\nNew VVV setup starting for site '$site'\" green\n  333  	cd $path\n  334  	vagrant halt\n  335  \n  336: 	# Create site folder with vvv-init.sh file\n  337  	# =============================================================================\n  338  	cd $path/www\n  339: 	echo -en \"Creating site directory, wp-cli.yml, and vvv-init.sh file... \"\n  340  	mkdir $site && cd $site\n  341  \n  ...\n  361  \"\\twp core update --allow-root\\n\"\\\n  362  \"\\twp core update-db --allow-root\\n\"\\\n  363: \"fi\\n\" > vvv-init.sh\n  364  \n  365  	done_text\n  366  \n  367: 	# Add vvv-hosts file for domain in the site's www root\n  368  	# =============================================================================\n  369  	cd $path/www/$site\n  370: 	echo -en \"Adding $domain to new vvv-hosts file... \"\n  371: 	touch vvv-hosts\n  372: 	printf \"$domain\\n\" >> vvv-hosts\n  373  	done_text\n  374  \n  ...\n  402  	fi\n  403  \n  404: 	cecho \"\\nNew VVV Site Setup: Done!\" blue bold\n  405  	echo \"Directory: $path/www/$site\"\n  406  	echo \"URL:       $domain\"\n  ...\n  414  #\n  415  # This will remove the site folder from www and remove the .conf file from\n  416: # nginx-config. Sites and folders installed by default with VVV cannot be\n  417  # deleted this way.\n  418  # =============================================================================\n  419  elif [[ $action = 'teardown' || $action = 'delete' || $action = 'rm' ]]; then\n  420  \n  421: 	cecho \"\\nVVV Site Teardown\" blue bold\n  422  \n  423  	# Get site dir name if not supplied as argument\n  ...\n  429  			cecho \"You must enter a valid directory from $path/www/.\"\n  430  			unset site\n  431: 		elif [[ $site = 'wordpress-default' || $site = 'wordpress-develop' || $site = 'wordpress-trunk' || $site = 'default' || $site = 'phpcs' || $site = 'vvv-hosts' || $site = 'wp-cli' || $site = '.gitshow' ]]; then\n  432: 			cecho \"This script can't delete the default VVV folders.\" red\n  433  			unset site\n  434  		fi\n  ...\n  442  		read continue_delete\n  443  		if [ $continue_delete = 'y' ]; then\n  444: 			cecho \"\\nVVV teardown starting for site '$site'\" green\n  445  			cd $path\n  446  \n  ...\n  458  \n  459  			# Delorted.\n  460: 			cecho \"\\nVVV Site Teardown: Done!\" blue bold\n  461  			exit\n  462  \n  ...\n  472  \n  473  # =============================================================================\n  474: # List VVV sites\n  475  #\n  476: # This lists the VVV sites currently present in the www folder, including the\n  477: # sites installed by default with VVV (wordpress-default, wordpress-trunk,\n  478  # and wordpress-dev).\n  479  # =============================================================================\n\n/Users/mickey/.dotfiles/DOT - dotfiles.sublime-workspace:\n  395  			[\n  396  				\"\",\n  397: 				\"/Users/mickey/Sites/vagrant-local/www/wordpress-default/VVV - WP Default.sublime-project\"\n  398  			]\n  399  		],\n\n/Users/mickey/.dotfiles/micktastic/directories/functions copy.zsh:\n   12  }\n   13  \n   14: # VVV (www folder)\n   15: vvv() {\n   16  	cd $SITES/vagrant-local/www\n   17  }\n   18  \n   19  # WordPress Default\n   20: vvvd() {\n   21: 	vvv\n   22  	cd wordpress-default\n   23  }\n   24  \n   25  # WordPress Trunk\n   26: vvvt() {\n   27: 	vvv\n   28  	cd wordpress-trunk\n   29  }\n   30  \n   31  # WordPress Dev\n   32: vvvv() {\n   33: 	vvv\n   34  	cd wordpress-develop\n   35  }\n\n/Users/mickey/.dotfiles/micktastic/directories/functions.zsh:\n    7  #\n    8  \n    9: # VVV (www folder)\n   10  vloc() {\n   11  	cd $SITES/vagrant-local/www\n   ..\n   15  \n   16  # WordPress Default\n   17: vvvd() {\n   18: 	vvv\n   19  	cd wordpress-default\n   20  }\n   21  \n   22  # WordPress Trunk\n   23: vvvt() {\n   24: 	vvv\n   25  	cd wordpress-trunk\n   26  }\n   27  \n   28  # WordPress Dev\n   29: vvvv() {\n   30: 	vvv\n   31  	cd wordpress-develop\n   32  }\n   ..\n   34  # Plugins\n   35  plugs() {\n   36: 	vvvt\n   37  	cd wp-content/plugins\n   38  }\n\n/Users/mickey/.dotfiles/micktastic/installation/install.sh:\n   19  \n   20  # Install host updater and triggers plugins\n   21: echo 'Installing VVV plugins.'\n   22  vagrant plugin install vagrant-hostsupdater\n   23  vagrant plugin install vagrant-triggers\n   24: echo 'Done installing VVV plugins.'\n   25  \n   26  # Install Vagrant\n   27: echo 'Installing VVV.'\n   28  if [ ! -d ~/vagrant-local ]\n   29  then\n   30:     git clone git://github.com/Varying-Vagrant-Vagrants/VVV.git ~/vagrant-local\n   31  else\n   32:     echo 'VVV is already installed.'\n   33  fi\n   34: echo 'Done installing VVV.'\n   35  \n   36  # Install Vagrant Site Wizard\n   37  echo 'Installing Vagrant Site Wizard.'\n   38: if [ ! -d $ZSH/vvv-site-wizard ]\n   39  then\n   40: 	git clone https://github.com/aliso/vvv-site-wizard.git $ZSH/bin/vvv-site-wizard\n   41  else\n   42  	echo 'Vagrant Site Wizard is already installed.'\n\n/Users/mickey/.dotfiles/README.md:\n    6  1. Install XCode Command Line Tools - this should come before just about anything else!  \n    7  	[`xcode-select --install`]\n    8: 1. Install Virtual Box (used by VVV).  \n    9  	[https://www.virtualbox.org/wiki/Downloads]\n   10  \n   ..\n   14  1. Install these dotfiles.  \n   15  	[[instructions below](https://github.com/MickeyKay/dotfiles#installation)]\n   16: 1. Install VVV. Make sure Homebrew is installed first - this should happen when installing the dotfiles and running `script/bootstrap`.  \n   17: 	[https://github.com/Varying-Vagrant-Vagrants/VVV]\n   18: 1. Install some VVV goodies:\n   19: 	- VVV Site Wizard  \n   20: 		[https://github.com/aliso/vvv-site-wizard]\n   21  1. Add GaryJ's deploy script to each dev install's plugins folder, or figure out a way to have this execute from one place.  \n   22  	[https://github.com/GaryJones/wordpress-plugin-git-flow-svn-deploy]\n\n/Users/mickey/.dotfiles/vagrant-local/.gitignore:\n   51  \n   52  # And we provide our default host names in a dat file.\n   53: !/www/vvv-hosts\n   54  \n   55  # And a few of our web directories are important to share.\n\n/Users/mickey/.dotfiles/vagrant-local/CHANGELOG.md:\n    3  ## 1.2-working\n    4  * ***Possible Breaking:*** By default, database files are no longer mapped to a local location.\n    5: 	* A full `vagrant destroy` and the removal of MySQL data from `{vvv-dir}/database/data/` is recommended.\n    6: 	* If database files already exist from an earlier vesion of VVV, data will continue to be mapped locally until removed.\n    7  	* Database data will continue to exist on the virtual machine through `vagrant halt` and `vagrant suspend`.\n    8  	* Database data will no longer exist on the virtual machine after `vagrant destroy`.\n    .\n   20  * phpMyAdmin: Update to 4.1.14\n   21  * WP-Cli: Add support for autocomplete.\n   22: * VVV Dashboard: Add [Opcache Status](https://github.com/rlerdorf/opcache-status) for opcache monitoring.\n   23  * Bash: Allow for a custom `bash_prompt` file in `config/`\n   24  * NodeJS: Use recommended PPAs to install\n   ..\n   29  * Transition to [Varying Vagrant Vagrants organization](https://github.com/Varying-Vagrant-Vagrants).\n   30  * Add a CONTRIBUTING document.\n   31: * Add `--allow-root` to all `wp-cli` calls in VVV core.\n   32  * Use a new global composer configuration.\n   33  * Add `zip` as a package during provisioning.\n   ..\n   36  \n   37  ## 1.0\n   38: * **Introduce** [Auto Site Setup](https://github.com/varying-vagrant-vagrants/VVV/wiki/Auto-site-Setup) during provisioning to allow for easy new project configuration.\n   39  * **Happy Fix** `vagrant up` after halt meets expectations and no longer requires provisioning to be reapplied.\n   40  * Begin implementing best practices from Google's [shell style guide](http://google-styleguide.googlecode.com/svn/trunk/shell.xml) in our provisioning scripts.\n   41  * Databases can now be dropped in phpMyAdmin. Pro-tip, `drop database wordpress_develop` in phpMyAdmin followed by `vagrant provision` clears your src.wordpress-develop.dev for reinstall.\n   42: * Copy config files instead of linking them. This allows for a nicer `vagrant up` after a `vagrant halt` and treats provisioning more like it should be treated. See [1fbf329](https://github.com/varying-vagrant-vagrants/VVV/commit/1fbf32926e69b852d912047da1bfa7c302693b82) for a more detailed commit message.\n   43: * Allow for `dashboard-custom.php` to override the default dashboard provided by VVV\n   44  * Reduce size of the included `my.cnf` file to exclude unrequired changes. Increase `max_allowed_packet` setting.\n   45  \n   ..\n   47  * **Possible Annoying:** Use `precise32` for the Vagrant box name for better cross project box caching.\n   48      * **Note:** This will probably cause a new Vagrant box to download. Use `vagrant box remove std-precise32` after a `vagrant destroy` to remove the old one and start with this.\n   49: * **Possible Breaking:** Change VM hostname to `vvv.dev`\n   50      * **Note:** If you had anything setup to rely on the hostname of precise32-dev, this may break.\n   51  * **Possible Breaking:** Change MySQL root password to `root`\n   ..\n   62  * **Introduce** PHP_CodeSniffer, WordPress-Coding-Standards, and Webgrind\n   63  * **Remove** entire well intended but not so useful flags system\n   64: * Rather than include PHPMemcachedadmin in the VVV repository, download it on initial provision\n   65  * Verify support for Vagrant 1.3.5 (as well as 1.2.x) and VirtualBox 4.3 (as well as 4.2.x)\n   66  * Move `xdebug_on` and `xdebug_off` controls to executable files in `config/homebin`\n   ..\n   88  \n   89  * Refactor of package provisioning allows for better (and incremental) `vagrant provision` uses by checking individual package installs before attempting to install them again.\n   90: * Remove several flags used to disable portions of provisioning. This favors the scaffold approach provided by VVV.\n   91  * Improved nginx configuration and documentation\n   92  * Use --asume-yes vs --force-yes with apt\n\n/Users/mickey/.dotfiles/vagrant-local/config/homebin/vagrant_destroy:\n    3  # This script is run whenever `vagrant destroy` is used to destroy\n    4  # the virtual machine. To customize this behavior, include a file\n    5: # in your local VVV/config/homebin directory: vagrant_destroy_custom\n    6  #\n    7  # Look for a custom trigger file. If this exists, we'll assume that\n\n/Users/mickey/.dotfiles/vagrant-local/config/homebin/vagrant_halt:\n    3  # This script is run whenever `vagrant halt` is used to power off\n    4  # the virtual machine. To customize this behavior, include a file\n    5: # in your local VVV/config/homebin directory: vagrant_halt_custom\n    6  #\n    7  # Look for a custom trigger file. If this exists, we'll assume that\n\n/Users/mickey/.dotfiles/vagrant-local/config/homebin/vagrant_suspend:\n    3  # This script is run whenever `vagrant suspend` is used to suspend\n    4  # the virtual machine. To customize this behavior, include a file\n    5: # in your local VVV/config/homebin directory: vagrant_suspend_custom\n    6  #\n    7  # Look for a custom trigger file. If this exists, we'll assume that\n\n/Users/mickey/.dotfiles/vagrant-local/config/nginx-config/sites/default.conf:\n    3  # Configurations are provided for 3 default sites in this file:\n    4  #\n    5: #   http://{vvv_ipaddress}\n    6  #       - Standard handling for php files, no WordPress\n    7  #       - Files available locally in this repository's www/default\n    .\n   28      listen       443 ssl;\n   29      root         /srv/www/default;\n   30:     server_name  vvv.dev;\n   31      \n   32      location / {\n\n/Users/mickey/.dotfiles/vagrant-local/config/php5-fpm-config/xdebug.ini:\n  100  ; USERNAME. The default is set to the first environment variable that is found. If none could be\n  101  ; found the setting has as default ''.\n  102: xdebug.idekey = \"VVVDEBUG\"\n  103  \n  104  ; xdebug.manual_url\n  ...\n  160  \n  161  ; xdebug.remote_autostart\n  162: ; Type: boolean, Default value: 0, VVV Default value: 1\n  163  ; Normally you need to use a specific HTTP GET/POST variable to start remote debugging (see Remote\n  164  ; Debugging). When this setting is set to 'On' Xdebug will always attempt to start a remote debugging\n\n/Users/mickey/.dotfiles/vagrant-local/CONTRIBUTING.md:\n    1: # Contributing to VVV\n    2  \n    3: Contributions to the VVV project are more than welcome.\n    4  \n    5  ## Issues\n    .\n   17  We do ask that the pull request be submitted against the current **master** branch. Every effort is made to make the pull request as stable as possible before merging it in, so we aren't too worried. A list of stable releases is maintained as we go and can be used by anyone concerned by ongoing development.\n   18  \n   19: It may make sense that a feature branch is created so that several contributors can work together. In this case, it is possible that write access to the VVV repository will be given liberally. You may be asked to submit your pull request against a feature branch so that it can be merged and worked on with others before going in to master.\n   20  \n   21  ## Milestones and Labels\n\n/Users/mickey/.dotfiles/vagrant-local/database/import-sql.sh:\n    3  # Import provided SQL files in to MySQL.\n    4  #\n    5: # The files in the {vvv-dir}/database/backups/ directory should be created by\n    6  # mysqldump or some other export process that generates a full set of SQL commands\n    7  # to create the necessary tables and data required by a database.\n    8  #\n    9  # For an import to work properly, the SQL file should be named `db_name.sql` in which\n   10: # `db_name` matches the name of a database already created in {vvv-dir}/database/init-custom.sql\n   11: # or {vvv-dir}/database/init.sql.\n   12  #\n   13  # If a filename does not match an existing database, it will not import correctly.\n   ..\n   15  # If tables already exist for a database, the import will not be attempted again. After an\n   16  # initial import, the data will remain persistent and available to MySQL on future boots\n   17: # through {vvv-dir}/database/data\n   18  #\n   19  # Let's begin...\n\n/Users/mickey/.dotfiles/vagrant-local/log/README.md:\n    1: # VVV Log Files\n    2  \n    3  This directory will remain empty until log files are written to by services within the virtual machine.\n\n/Users/mickey/.dotfiles/vagrant-local/provision/provision.sh:\n  124  #\n  125  # Use debconf-set-selections to specify the selections in the postfix setup. Set\n  126: # up as an 'Internet Site' with the host name 'vvv'. Note that if your current\n  127  # Internet connection does not allow communication over port 25, you will not be\n  128  # able to send mail, even with postfix installed.\n  129  echo postfix postfix/main_mailer_type select Internet Site | debconf-set-selections\n  130: echo postfix postfix/mailname string vvv | debconf-set-selections\n  131  \n  132  # Provide our custom apt sources before running `apt-get update`\n  133: ln -sf /srv/config/apt-source-append.list /etc/apt/sources.list.d/vvv-sources.list\n  134  echo \"Linked custom apt sources\"\n  135  \n  ...\n  229  if [[ ! -e /etc/nginx/server.key ]]; then\n  230  	echo \"Generate Nginx server private key...\"\n  231: 	vvvgenrsa=\"$(openssl genrsa -out /etc/nginx/server.key 2048 2>&1)\"\n  232: 	echo $vvvgenrsa\n  233  fi\n  234  if [[ ! -e /etc/nginx/server.csr ]]; then\n  ...\n  238  if [[ ! -e /etc/nginx/server.crt ]]; then\n  239  	echo \"Sign the certificate using the above private key and CSR...\"\n  240: 	vvvsigncert=\"$(openssl x509 -req -days 365 -in /etc/nginx/server.csr -signkey /etc/nginx/server.key -out /etc/nginx/server.crt 2>&1)\"\n  241: 	echo $vvvsigncert\n  242  fi\n  243  \n  ...\n  245  \n  246  # Used to to ensure proper services are started on `vagrant up`\n  247: cp /srv/config/init/vvv-start.conf /etc/init/vvv-start.conf\n  248  \n  249: echo \" * /srv/config/init/vvv-start.conf               -> /etc/init/vvv-start.conf\"\n  250  \n  251  # Copy nginx configuration from local\n  ...\n  302  echo \" * /srv/config/homebin                           -> /home/vagrant/bin\"\n  303  \n  304: # If a bash_prompt file exists in the VVV config/ directory, copy to the VM.\n  305  if [[ -f /srv/config/bash_prompt ]]; then\n  306  	cp /srv/config/bash_prompt /home/vagrant/.bash_prompt\n  ...\n  555  # We can't know what sites have been removed, so we have to remove all\n  556  # the configs and add them back in again.\n  557: find /etc/nginx/custom-sites -name 'vvv-auto-*.conf' -exec rm {} \\;\n  558  \n  559  # Look for site setup scripts\n  560: for SITE_CONFIG_FILE in $(find /srv/www -maxdepth 5 -name 'vvv-init.sh'); do\n  561  	DIR=\"$(dirname $SITE_CONFIG_FILE)\"\n  562  	(\n  563  		cd $DIR\n  564: 		source vvv-init.sh\n  565  	)\n  566  done\n  567  \n  568  # Look for Nginx vhost files, symlink them into the custom sites dir\n  569: for SITE_CONFIG_FILE in $(find /srv/www -maxdepth 5 -name 'vvv-nginx.conf'); do\n  570  	DEST_CONFIG_FILE=${SITE_CONFIG_FILE//\\/srv\\/www\\//}\n  571  	DEST_CONFIG_FILE=${DEST_CONFIG_FILE//\\//\\-}\n  572: 	DEST_CONFIG_FILE=${DEST_CONFIG_FILE/%-vvv-nginx.conf/}\n  573: 	DEST_CONFIG_FILE=\"vvv-auto-$DEST_CONFIG_FILE-$(md5sum <<< $SITE_CONFIG_FILE | cut -c1-32).conf\"\n  574: 	# We allow the replacement of the {vvv_path_to_folder} token with\n  575  	# whatever you want, allowing flexible placement of the site folder\n  576  	# while still having an Nginx config which works.\n  577  	DIR=\"$(dirname $SITE_CONFIG_FILE)\"\n  578: 	sed \"s#{vvv_path_to_folder}#$DIR#\" $SITE_CONFIG_FILE > /etc/nginx/custom-sites/$DEST_CONFIG_FILE\n  579  done\n  580  \n  ...\n  585  service nginx restart\n  586  \n  587: # Parse any vvv-hosts file located in www/ or subdirectories of www/\n  588  # for domains to be added to the virtual machine's host file so that it is\n  589  # self aware.\n  ...\n  591  # Domains should be entered on new lines.\n  592  echo \"Cleaning the virtual machine's /etc/hosts file...\"\n  593: sed -n '/# vvv-auto$/!p' /etc/hosts > /tmp/hosts\n  594  mv /tmp/hosts /etc/hosts\n  595  echo \"Adding domains to the virtual machine's /etc/hosts file...\"\n  596: find /srv/www/ -maxdepth 5 -name 'vvv-hosts' | \\\n  597  while read hostfile; do\n  598  	while IFS='' read -r line || [ -n \"$line\" ]; do\n  599  		if [[ \"#\" != ${line:0:1} ]]; then\n  600  			if [[ -z \"$(grep -q \"^127.0.0.1 $line$\" /etc/hosts)\" ]]; then\n  601: 				echo \"127.0.0.1 $line # vvv-auto\" >> /etc/hosts\n  602  				echo \" * Added $line from $hostfile\"\n  603  			fi\n  ...\n  614  	echo \"No external network available. Package installation and maintenance skipped.\"\n  615  fi\n  616: echo \"For further setup instructions, visit http://vvv.dev\"\n  617  \n\n/Users/mickey/.dotfiles/vagrant-local/README.md:\n    3  Varying Vagrant Vagrants is an evolving [Vagrant](http://vagrantup.com) configuration focused on [WordPress](http://wordpress.org) development.\n    4  \n    5: VVV is a [10up](http://10up.com) creation and [transitioned](http://10up.com/blog/varying-vagrant-vagrants-future/) to a community organization in 2014.\n    6  \n    7  * **Version**: 1.2-working\n    8: * **Latest Stable**: [v1.1](https://github.com/varying-vagrant-vagrants/vvv/tree/v1.1)\n    9  * **Contributors**: [@jeremyfelt](https://github.com/jeremyfelt), [@carldanley](https://github.com/carldanley), [@ericmann](https://github.com/ericmann), [@lkwdwrd](https://github.com/lkwdwrd), [@TheLastCicada](https://github.com/TheLastCicada), [@tddewey](https://github.com/tddewey), [@johnpbloch](https://github.com/johnpbloch), [@kadamwhite](https://github.com/kadamwhite), [@scribu](https://github.com/scribu), [@danielbachhuber](https://github.com/danielbachhuber), [@tollmanz](https://github.com/tollmanz), [@mbijon](https://github.com/mbijon), [@markjaquith](https://github.com/markjaquith), [@curtismchale](https://github.com/curtismchale), [@Mamaduka](https://github.com/mamaduka), [@lgedeon](https://github.com/lgedeon), [@pmgarman](https://github.com/pmgarman), [@westonruter](https://github.com/westonruter), [@petemall](https://github.com/petemall), [@cmmarslender](https://github.com/cmmarslender), [@mintindeed](https://github.com/mintindeed), [@mboynes](https://github.com/mboynes), [@aaronjorbin](https://github.com/aaronjorbin), [@tobiasbg](https://github.com/tobiasbg), [@simonwheatley](https://github.com/simonwheatley), [@ocean90](https://github.com/ocean90), [@lvnilesh](https://github.com/lvnilesh), [@alexw23](https://github.com/alexw23), [@zamoose](https://github.com/zamoose), [@leewillis77](https://github.com/leewillis77), [@imichaeli](https://github.com/imichaeli), [@andrezrv](https://github.com/andrezrv), [@cadwell](https://github.com/cadwell), [@cfoellmann](https://github.com/cfoellmann), [@westi](https://github.com/westi), [@ryanduff](https://github.com/ryanduff), [@selinerdominik](https://github.com/selinerdominik), [@ericandrewlewis](https://github.com/ericandrewlewis), [@vDevices](https://github.com/vDevices), [@sunnyratilal](https://github.com/sunnyratilal), [@enejb](https://github.com/enejb), [@salcode](https://github.com/salcode), [@mattbanks](https://github.com/mattbanks), [@aaroncampbell](https://github.com/aaroncampbell), [@tnorthcutt](https://github.com/tnorthcutt), [@neilpie](https://github.com/neilpie), [@francescolaffi](https://github.com/francescolaffi), [@itsananderson](https://github.com/itsananderson), [@foolswis](https://github.com/foolswis)\n   10: * **Contributing**: Contributions are more than welcome. Please see our current [contributing guidelines](https://github.com/Varying-Vagrant-Vagrants/VVV/blob/master/CONTRIBUTING.md). Thanks!\n   11  \n   12  ## Overview\n   ..\n   14  ### The Purpose of Varying Vagrant Vagrants\n   15  \n   16: The primary goal of Varying Vagrant Vagrants (VVV) is to provide an approachable development environment that matches a typical production environment.\n   17  \n   18: The default server configuration provisioned by VVV matches a common configuration for working with high traffic WordPress sites.\n   19  \n   20: The default WordPress configurations provided by VVV create an environment ideal for developing themes and plugins as well as for [contributing to WordPress core](http://make.wordpress.org/core/).\n   21  \n   22  ### How to Use Varying Vagrant Vagrants\n   ..\n   24  #### Software Requirements\n   25  \n   26: VVV requires recent versions of both Vagrant and VirtualBox to be installed.\n   27  \n   28  [Vagrant](http://www.vagrantup.com) is a \"tool for building and distributing development environments\". It works with [virtualization](http://en.wikipedia.org/wiki/X86_virtualization) software such as [VirtualBox](https://www.virtualbox.org/) to provide a virtual machine sandboxed from your local environment.\n   29  \n   30: #### VVV as a MAMP/XAMPP Replacement\n   31  \n   32: Once Vagrant and VirtualBox are installed, download or clone VVV and type `vagrant up` to automatically build a virtualized Ubuntu server on your computer containing everything needed to develop a WordPress theme or plugin. See our section on [The First Vagrant Up](#the-first-vagrant-up) for detailed instructions.\n   33  \n   34  Multiple projects can be developed at once in the same environment.\n   ..\n   36  * Use `wp-content/themes` in either the `www/wordpress-default` or `www/wordpress-trunk` directories to develop themes.\n   37  * Use `wp-content/plugins` in either the `www/wordpress-default` or `www/wordpress-trunk` directories to develop plugins.\n   38: * Take advantage of VVV's [auto site configuration](https://github.com/varying-vagrant-vagrants/vvv/wiki/Auto-site-Setup) to provision additional instances of WordPress in `www/`.\n   39  * Use the `www/wordpress-develop` directory to participate in [WordPress core](http://core.trac.wordpress.org) development.\n   40  \n   41: VVV's `config`, `database`, `log` and `www` directories are shared with the virtualized server.\n   42  \n   43  These shared directories allow you to work, for example, in `vagrant-local/www/wordpress-default` in your local file system and have those changes immediately reflected in the virtualized server's file system and http://local.wordpress.dev/. Likewise, if you `vagrant ssh` and make modifications to the files in `/svr/www/`, you'll immediately see those changes in your local file system.\n   44  \n   45: #### VVV as a Scaffold\n   46  \n   47: Entirely different server configurations can be created by modifying the files included with VVV and through the use of additional [Auto Site Setup](https://github.com/varying-vagrant-vagrants/vvv/wiki/Auto-site-Setup) provisioning scripts. Check this project out and use it as a base to learn about server provisioning or change everything to make it your own.\n   48  \n   49  ### The First Vagrant Up\n   ..\n   55      * ***Note:*** If Vagrant is already installed, use `vagrant -v` to check the version. You may want to consider upgrading if a much older version is in use.\n   56  1. Install the [vagrant-hostsupdater](https://github.com/cogitatio/vagrant-hostsupdater) plugin with `vagrant plugin install vagrant-hostsupdater`\n   57:     * Note: This step is not a requirement, though it does make the process of starting up a virtual machine nicer by automating the entries needed in your local machine's `hosts` file to access the provisioned VVV domains in your browser.\n   58:     * If you choose not to install this plugin, a manual entry should be added to your local `hosts` file that looks like this: `192.168.50.4  vvv.dev local.wordpress.dev local.wordpress-trunk.dev src.wordpress-develop.dev build.wordpress-develop.dev`\n   59  1. Install the [vagrant-triggers](https://github.com/emyl/vagrant-triggers) plugin with `vagrant plugin install vagrant-triggers`\n   60      * Note: This step is not a requirement. It does allow for various scripts to fire when issuing commands such as `vagrant halt` and `vagrant destroy`.\n   61:     * By default, if vagrant-triggers is installed, a `db_backup` script will run on halt, suspend, and destroy that backs up each database to a `dbname.sql` file in the `{vvv}/database/backups/` directory. These will then be imported automatically if starting from scratch. Custom scripts can be added to override this default behavior.\n   62  1. Clone or extract the Varying Vagrant Vagrants project into a local directory\n   63:     * `git clone git://github.com/Varying-Vagrant-Vagrants/VVV.git vagrant-local`\n   64:     * OR download and extract the repository master [zip file](https://github.com/varying-vagrant-vagrants/vvv/archive/master.zip) to a `vagrant-local` directory on your computer.\n   65:     * OR download and extract a [stable release](https://github.com/varying-vagrant-vagrants/vvv/releases) zip file if you'd like some extra comfort.\n   66  1. In a command prompt, change into the new directory with `cd vagrant-local`\n   67  1. Start the Vagrant environment with `vagrant up`\n   ..\n   73      * [http://src.wordpress-develop.dev/](http://src.wordpress-develop.dev/) for trunk WordPress development files\n   74      * [http://build.wordpress-develop.dev/](http://build.wordpress-develop.dev/) for the version of those development files built with Grunt\n   75:     * [http://vvv.dev/](http://vvv.dev/) for a default dashboard containing several useful tools\n   76  \n   77  Fancy, yeah?\n   ..\n   81  The first time you run `vagrant up`, a packaged box containing a basic virtual machine is downloaded to your local machine and cached for future use. The file used by Varying Vagrant Vagrants contains an installation of Ubuntu 14.04 and is about 332MB.\n   82  \n   83: After this box is downloaded, it begins to boot as a sandboxed virtual machine using VirtualBox. Once booted, it runs the provisioning script included with VVV. This initiates the download and installation of around 100MB of packages on the new virtual machine.\n   84  \n   85  The time for all of this to happen depends a lot on the speed of your Internet connection. If you are on a fast cable connection, it will likely only take several minutes.\n   ..\n   96  \n   97  1. Access the server via the command line with `vagrant ssh` from your `vagrant-local` directory. You can do almost anything you would do with a standard Ubuntu installation on a full server.\n   98:     * **MS Windows users:** An SSH client is generally not distributed with Windows PCs by default. However, a terminal emulator such as [PuTTY](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) will provide access immediately. For detailed instructions on connecting with PuTTY, consult the [VVV Wiki](https://github.com/Varying-Vagrant-Vagrants/VVV/wiki/Connect-to-Your-Vagrant-Virtual-Machine-with-PuTTY).\n   99  1. Power off the box with `vagrant halt` and turn it back on with `vagrant up`.\n  100  1. Suspend the box's state in memory with `vagrant suspend` and bring it right back with `vagrant resume`.\n  101  1. Reapply provisioning to a running box with `vagrant provision`.\n  102  1. Destroy the box with `vagrant destroy`. Files added in the `www` directory will persist on the next `vagrant up`.\n  103: 1. Start modifying and adding local files to fit your needs. Take a look at [Auto Site Setup](https://github.com/varying-vagrant-vagrants/vvv/wiki/Auto-site-Setup) for tips on adding new projects.\n  104  \n  105  #### Caveats\n  ...\n  107  The network configuration picks an IP of 192.168.50.4. It could cause conflicts on your existing network if you *are* on a 192.168.50.x subnet already. You can configure any IP address in the `Vagrantfile` and it will be used on the next `vagrant up`\n  108  \n  109: VVV relies on the stability of both Vagrant and Virtualbox. These caveats are common to Vagrant environments and are worth noting:\n  110: * If the directory VVV is inside of is moved once provisioned (`vagrant-local`), it may break.\n  111      * If `vagrant destroy` is used before moving, this should be fine.\n  112: * If Virtualbox is uninstalled, VVV will break.\n  113: * If Vagrant is uninstalled, VVV will break.\n  114  \n  115  ### Credentials and Such\n  ...\n  142  * User: `root`\n  143  * Pass: `root`\n  144: * See: [Connecting to MySQL](https://github.com/varying-vagrant-vagrants/vvv/wiki/Connecting-to-MySQL) from your local machine\n  145  \n  146  ### What do you get?\n  ...\n  178  * Let us have it! Don't hesitate to open a new issue on GitHub if you run into trouble or have any tips that we need to know.\n  179  * The [WordPress and Vagrant Mailing list](https://groups.google.com/forum/#!forum/wordpress-and-vagrant) is a great place to get started for any related topics.\n  180: * The [VVV Wiki](https://github.com/varying-vagrant-vagrants/vvv/wiki) also contains documentation that may help.\n  181  \n  182  ### The Future of Varying Vagrant Vagrants\n  183  \n  184: Immediate goals for VVV include:\n  185  \n  186  * Continue to work towards a stable state of software and configuration included in the default provisioning.\n  187: * Provide excellent and clear documentation throughout VVV to aid in both learning and scaffolding.\n  188  \n  189  ### History\n  190  \n  191: VVV has come a long way since it was first [launched as Varying Vagrant Vagrants](http://jeremyfelt.com/code/2012/12/11/varying-vagrant-vagrants/) in December of 2012. Initially introduced as an exploration of workflow for immediate project needs at [10up](http://10up.com), VVV caught speed quickly as more and more of the team was introduced. During an internal [10up developer summit](http://10up.com/blog/10up-2013-developer-summit/) in March of 2013, Vagrant as a tool was a highlight and more developers made the conversion.\n  192  \n  193  In April of 2013, we made a [call to the WordPress community](http://jeremyfelt.com/code/2013/04/08/hi-wordpress-meet-vagrant/) to try to encourage the addition of Vagrant to everyday life. These efforts continued with talks at [WordCamp Chicago](http://wordpress.tv/2013/12/31/jeremy-felt-hi-wordpress-meet-vagrant-2/), [WordCamp Vancouver](http://wordpress.tv/2013/10/19/jeremy-felt-hi-wordpress-meet-vagrant/), and WordCamp Denver.\n  194  \n  195: In January of 2014, [10up](http://10up.com) made the decision to [spin VVV off](http://10up.com/blog/varying-vagrant-vagrants-future/) into its own organization to better align with the community that has grown around the project over time. This transition opens doors for what [Varying Vagrant Vagrants, the organization](http://jeremyfelt.com/code/2014/01/27/varying-vagrant-vagrants-organization/) can accomplish as an ongoing project.\n  196  \n\n/Users/mickey/.dotfiles/vagrant-local/Vagrantfile:\n   31    config.vm.box = \"ubuntu/trusty64\"\n   32  \n   33:   config.vm.hostname = \"vvv\"\n   34  \n   35    # Local Machine Hosts\n   ..\n   40    # required to enter a password for Vagrant to access your hosts file.\n   41    #\n   42:   # By default, we'll include the domains setup by VVV through the vvv-hosts file\n   43    # located in the www/ directory.\n   44    #\n   45:   # Other domains can be automatically added by including a vvv-hosts file containing\n   46    # individual domains separated by whitespace in subdirectories of www/.\n   47    if defined? VagrantPlugins::HostsUpdater\n   48  \n   49:     # Capture the paths to all vvv-hosts files under the www/ directory.\n   50      paths = []\n   51:     Dir.glob(vagrant_dir + '/www/**/vvv-hosts').each do |path|\n   52        paths << path\n   53      end\n   54  \n   55:     # Parse through the vvv-hosts files in each of the found paths and put the hosts\n   56      # that are found into a single array.\n   57      hosts = []\n\n/Users/mickey/.dotfiles/vagrant-local/www/default/index.php:\n   21  <ul class=\"nav\">\n   22  	<li class=\"active\"><a href=\"#\">Home</a></li>\n   23: 	<li><a href=\"https://github.com/varying-vagrant-vagrants/vvv/\">Repository</a></li>\n   24  	<li><a href=\"database-admin/\">phpMyAdmin</a></li>\n   25  	<li><a href=\"memcached-admin/\">phpMemcachedAdmin</a></li>\n\n/Users/mickey/.dotfiles/vagrant-local/www/vvv-hosts:\n    4  # machines as the virtual machines boot.\n    5  #\n    6: # In addition to this file, other files named vvv-hosts can\n    7  # be created with additional domain information. These will be\n    8  # automatically parsed as long as they are located in subdirectories\n    9  # of the www/ directory.\n   10: vvv.dev\n   11  local.wordpress.dev\n   12  local.wordpress-trunk.dev\n\n196 matches across 22 files\n\n\n\nSearching 83 files for \"install.sh\"\n\n/Users/mickey/.dotfiles/bin/dot:\n   14  \n   15  # Install homebrew packages\n   16: $ZSH/homebrew/install.sh 2>&1\n\n/Users/mickey/.dotfiles/DOT - dotfiles.sublime-workspace:\n   76  		{\n   77  			\"contents\": \"#!/bin/sh\\n\\n#\\n# Custom Installations\\n#\\n# As per various smart people's suggestions, use Homebrew\\n# to get more up-to-date versions of all these goodies.\\n\\n#\\n# Homebrew Installs\\n# \\nbrew install git\\nbrew install zsh\\nbrew install python\\n\\n#\\n# Varying Vagrant Vagrants\\n#\\necho 'Installing Varying Vagrant Vagrants.'\\n\\n# Install host updater and triggers plugins\\necho 'Installing VVV plugins.'\\nvagrant plugin install vagrant-hostsupdater\\nvagrant plugin install vagrant-triggers\\necho 'Done installing VVV plugins.'\\n\\n# Install Vagrant\\necho 'Installing VVV.'\\nif [ ! -d ~/vagrant-local ]\\nthen\\n    git clone git://github.com/Varying-Vagrant-Vagrants/VVV.git ~/vagrant-local\\nelse\\n    echo 'VVV is already installed.'\\nfi\\necho 'Done installing VVV.'\\n\\n# Install Vagrant Site Wizard\\necho 'Installing Vagrant Site Wizard.'\\nif [ ! -d $ZSH/vvv-site-wizard ]\\nthen\\n	git clone https://github.com/aliso/vvv-site-wizard.git $ZSH/bin/vvv-site-wizard\\nelse\\n	echo 'Vagrant Site Wizard is already installed.'\\nfi\\necho 'Done installing Vagrant Site Wizard.'\\n\\n# Install VVV Dashboar\\necho 'Installing VVV Dashboard.'\\nif [ ! -d $ZSH/vvv-site-wizard ]\\nthen\\n	git clone https://github.com/aliso/vvv-site-wizard.git ~/vagrant-local/vvv-site-wizard\\nelse\\n	echo 'VVV Dashboard is already installed.'\\nfi\\necho 'Done installing VVV Dashboard.'\\n\\n\",\n   78: 			\"file\": \"/Users/mickey/.dotfiles/micktastic/installation/install.sh\",\n   79  			\"file_size\": 1280,\n   80  			\"file_write_time\": 1407776747000000,\n   ..\n  120  		\"/Users/mickey/.dotfiles/system/env.zsh\",\n  121  		\"/Users/mickey/.dotfiles/system/aliases.zsh\",\n  122: 		\"/Users/mickey/.dotfiles/homebrew/install.sh\",\n  123  		\"/Users/mickey/.dotfiles/zsh/zshrc.symlink\",\n  124  		\"/Users/mickey/.dotfiles/bin/movieme\",\n  ...\n  374  				{\n  375  					\"buffer\": 7,\n  376: 					\"file\": \"/Users/mickey/.dotfiles/micktastic/installation/install.sh\",\n  377  					\"settings\":\n  378  					{\n  ...\n  451  			[\n  452  				\"install\",\n  453: 				\"micktastic/installation/install.sh\"\n  454  			],\n  455  			[\n\n/Users/mickey/.dotfiles/README.md:\n   12  	---\n   13  \n   14: 1. Install these dotfiles (/micktastic/installation/install.sh should install some goodies when this happens).  \n   15  	[[instructions below](https://github.com/MickeyKay/dotfiles#installation)]\n   16  1. Add GaryJ's deploy script to each dev install's plugins folder, or figure out a way to have this execute from one place.  \n   ..\n   62  ### Mickey's Custom Stuff\n   63  It all lives under **micktastic/**:\n   64: - **installation/install.sh**: installs a bunch of good stuff (VVV, updated Git/ZSH, etc).\n   65  \n   66  ### Holman's Original Stuff\n\n/Users/mickey/.dotfiles/script/install:\n    8  \n    9  # find the installers and run them iteratively\n   10: find . -name install.sh | while read installer ; do sh -c \"${installer}\" ; done\n   11  \n\n8 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 45272,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "micktastic/git/functions.zsh",
			"settings":
			{
				"buffer_size": 2227,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#! /bin/bash\n# See https://github.com/GaryJones/wordpress-plugin-git-flow-svn-deploy for instructions and credits.\n\necho\necho \"WordPress Plugin Git-Flow SVN Deploy v1.0.0-dev\"\necho\necho \"Step 1. Let's collect some information first.\"\necho\necho \"Default values are in brackets - just hit enter to accept them.\"\necho\n\n# Get some user input\n# Can't use the -i flag for read, since that doesn't work for bash 3\nread -e -p \"1a) WordPress Repo Plugin Slug e.g. my-awesome-plugin: \" PLUGINSLUG\necho\n\n# Set up some default values. Feel free to change these in your own script\nCURRENTDIR=`pwd`\ndefault_svnpath=\"/tmp/$PLUGINSLUG\"\ndefault_svnurl=\"http://plugins.svn.wordpress.org/$PLUGINSLUG\"\ndefault_svnuser=\"McGuive7\"\ndefault_plugindir=\"$CURRENTDIR/$PLUGINSLUG\"\ndefault_mainfile=\"$PLUGINSLUG.php\"\n\necho \"1b) Path to a local directory where a temporary SVN checkout can be made.\"\nread -e -p \"No trailing slash and don't add trunk ($default_svnpath): \" input\nSVNPATH=\"${input:-$default_svnpath}\"\necho\n\necho \"1c) Remote SVN repo on WordPress.org. No trailing slash.\"\nread -e -p \"($default_svnurl): \" input\nSVNURL=\"${input:-$default_svnurl}\"\necho\n\nread -e -p \"1d) Your WordPress repo SVN username ($default_svnuser): \" input\nSVNUSER=\"${input:-$default_svnuser}\"\necho\n\necho \"1e) Your local plugin root directory, the Git repo.\"\nread -e -p \"($default_plugindir): \" input\nPLUGINDIR=\"${input:-$default_plugindir}\"\necho\n\nread -e -p \"1f) Name of the main plugin file ($default_mainfile): \" input\nMAINFILE=\"${input:-$default_mainfile}\"\necho\n\necho \"That's all of the data collected.\"\necho\necho \"Slug: $PLUGINSLUG\"\necho \"Temp checkout path: $SVNPATH\"\necho \"Remote SVN repo: $SVNURL\"\necho \"SVN username: $SVNUSER\"\necho \"Plugin directory: $PLUGINDIR\"\necho \"Main file: $MAINFILE\"\necho\n\n# git config\nGITPATH=\"$PLUGINDIR/\" # this file should be in the base of your git repository\n\n# Let's begin...\necho \"..........................................\"\necho \necho \"Preparing to deploy WordPress plugin\"\necho \necho \"..........................................\"\necho \n\n# Check version in readme.txt is the same as plugin file after translating both to unix line breaks to work around grep's failure to identify mac line breaks\nNEWVERSION1=`grep \"^Stable tag:\" $GITPATH/readme.txt | awk -F' ' '{print $NF}' | tr -d '\\r'`\necho \"readme.txt version: $NEWVERSION1\"\nNEWVERSION2=`grep \"Version:\" $GITPATH/$MAINFILE | awk -F' ' '{print $NF}' | tr -d '\\r'`\necho \"$MAINFILE version: $NEWVERSION2\"\n\nif [ \"$NEWVERSION1\" != \"$NEWVERSION2\" ]; then echo \"Version in readme.txt & $MAINFILE don't match. Exiting....\"; exit 1; fi\n\necho \"Versions match in readme.txt and $MAINFILE. Let's proceed...\"\n\n# GaryJ: Ignore check for git tag, as git flow release finish creates this.\n#if git show-ref --tags --quiet --verify -- \"refs/tags/$NEWVERSION1\"\n#	then \n#		echo \"Version $NEWVERSION1 already exists as git tag. Exiting....\"; \n#		exit 1; \n#	else\n#		echo \"Git version does not exist. Let's proceed...\"\n#fi\n\necho \"Changing to $GITPATH\"\ncd $GITPATH\n# GaryJ: Commit message variable not needed . Hard coded for SVN trunk commit for consistency.\n#echo -e \"Enter a commit message for this new version: \\c\"\n#read COMMITMSG\n# GaryJ: git flow release finish already covers this commit.\n#git commit -am \"$COMMITMSG\"\n\n# GaryJ: git flow release finish already covers this tag creation.\n#echo \"Tagging new version in git\"\n#git tag -a \"$NEWVERSION1\" -m \"Tagging version $NEWVERSION1\"\n\necho \"Pushing git master to origin, with tags\"\ngit push origin master\ngit push origin master --tags\n\necho \necho \"Creating local copy of SVN repo trunk ...\"\nsvn checkout $SVNURL/trunk $SVNPATH/trunk\n\necho \"Ignoring GitHub specific files\"\nsvn propset svn:ignore \"README.md\nThumbs.db\n.git\n.gitignore\" \"$SVNPATH/trunk/\"\n\necho \"Exporting the HEAD of master from git to the trunk of SVN\"\ngit checkout-index -a -f --prefix=$SVNPATH/trunk/\n\n# If submodule exist, recursively check out their indexes\nif [ -f \".gitmodules\" ]\n	then\n		echo \"Exporting the HEAD of each submodule from git to the trunk of SVN\"\n		git submodule init\n		git submodule update\n		git submodule foreach --recursive 'git checkout-index -a -f --prefix=$SVNPATH/trunk/$path/'\nfi\n\n# Support for the /assets folder on the .org repo.\necho \"Moving assets\"\n# Make the directory if it doesn't already exist\nmkdir -p $SVNPATH/assets/\nmv $SVNPATH/trunk/assets/* $SVNPATH/assets/\nsvn add --force $SVNPATH/assets/\nsvn delete --force $SVNPATH/trunk/assets\n\necho \"Changing directory to SVN and committing to trunk\"\ncd $SVNPATH/trunk/\n# Delete all files that should not now be added.\nsvn status | grep -v \"^.[ \\t]*\\..*\" | grep \"^\\!\" | awk '{print $2}' | xargs svn del\n# Add all new files that are not set to be ignored\nsvn status | grep -v \"^.[ \\t]*\\..*\" | grep \"^?\" | awk '{print $2}' | xargs svn add\nsvn commit --username=$SVNUSER -m \"Preparing for $NEWVERSION1 release\"\n\necho \"Updating WordPress plugin repo assets and committing\"\ncd $SVNPATH/assets/\n# Add all new files that are not set to be ignored\nsvn status | grep -v \"^.[ \\t]*\\..*\" | grep \"^\\!\" | awk '{print $2}' | xargs svn del\n# Add all new files that are not set to be ignored\nsvn status | grep -v \"^.[ \\t]*\\..*\" | grep \"^?\" | awk '{print $2}' | xargs svn add\nsvn commit --username=$SVNUSER -m \"Updating assets\"\n\necho \"Creating new SVN tag and committing it\"\ncd $SVNPATH\nsvn copy trunk/ tags/$NEWVERSION1/\n# Remove assets and trunk directories from tag directory\nsvn delete --force $SVNPATH/tags/$NEWVERSION1/assets\nsvn delete --force $SVNPATH/tags/$NEWVERSION1/trunk\ncd $SVNPATH/tags/$NEWVERSION1\nsvn commit --username=$SVNUSER -m \"Tagging version $NEWVERSION1\"\n\necho \"Removing temporary directory $SVNPATH\"\ncd $SVNPATH\ncd ..\nrm -fr $SVNPATH/\n\necho \"*** FIN ***\"\n",
			"file": "micktastic/git/wordpress-plugin-git-flow-svn-deploy/deploy.sh",
			"file_size": 5688,
			"file_write_time": 1407727445000000,
			"settings":
			{
				"buffer_size": 5688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "script/bootstrap",
			"settings":
			{
				"buffer_size": 2971,
				"line_ending": "Unix"
			}
		},
		{
			"file": "zsh/zshrc.symlink",
			"settings":
			{
				"buffer_size": 826,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#\n# Directory Navigation Functions\n#\n\n#\n# Sites\n#\n\n# Top directory\nsites() {\n	cd $SITES\n}\n\n# VVV (www folder)\nvvv() {\n	cd $SITES/vagrant-local/www\n}\n\n# WordPress Default\nvvvd() {\n	vvv\n	cd wordpress-default\n}\n\n# WordPress Trunk\nvvvt() {\n	vvv\n	cd wordpress-trunk\n}\n\n# WordPress Dev\nvvvv() {\n	vvv\n	cd wordpress-develop\n}\n\n# Plugins folder (assumes you're in the WP root)\nplugins() {\n	cd wp-content/plugins\n}\n\n# Themes folder (assumes you're in the WP root)\nthemes() {\n	cd wp-content/themes\n}",
			"file": "micktastic/directories/functions copy.zsh",
			"file_size": 488,
			"file_write_time": 1407483660000000,
			"settings":
			{
				"buffer_size": 488,
				"line_ending": "Unix"
			}
		},
		{
			"file": "osx/set-defaults.sh",
			"settings":
			{
				"buffer_size": 1170,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/dot",
			"settings":
			{
				"buffer_size": 310,
				"line_ending": "Unix"
			}
		},
		{
			"file": "script/install",
			"settings":
			{
				"buffer_size": 212,
				"line_ending": "Unix"
			}
		},
		{
			"file": "micktastic/vagrant/aliases.zsh",
			"settings":
			{
				"buffer_size": 94,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/mickey/.dotfiles/micktastic/vagrant/untitled",
		"/Users/mickey/.dotfiles/script/bootstrap",
		"/Users/mickey/.dotfiles/homebrew/install.sh",
		"/Users/mickey/.dotfiles/micktastic/aliases.zsh",
		"/Users/mickey/.dotfiles/micktastic/directories/functions copy.zsh",
		"/Users/mickey/.dotfiles/micktastic/git/functions.zsh",
		"/Users/mickey/.dotfiles/git/gitconfig.symlink",
		"/Users/mickey/.dotfiles/bin/git-nuke",
		"/Users/mickey/.dotfiles/git/completion.zsh",
		"/Users/mickey/.dotfiles/system/_path.zsh",
		"/Users/mickey/.dotfiles/zsh/aliases.zsh",
		"/Users/mickey/.dotfiles/system/keys.zsh",
		"/Users/mickey/.dotfiles/system/env.zsh",
		"/Users/mickey/.dotfiles/system/aliases.zsh",
		"/Users/mickey/.dotfiles/zsh/zshrc.symlink",
		"/Users/mickey/.dotfiles/bin/movieme",
		"/Users/mickey/.dotfiles/bin/todo"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/mickey/.dotfiles"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"source",
			"script",
			"install",
			"install.sh",
			"~/vagrant-local",
			"brew",
			"version",
			"vvv",
			"create or",
			"create",
			"can't create",
			"readme",
			"install.sh",
			"link_file",
			"install"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"$VAGRANT_DIR"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"settings":
					{
						"buffer_size": 4303,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "micktastic/installation/install.sh",
					"settings":
					{
						"buffer_size": 2320,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"auto_name": "#",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "micktastic/globals.zsh",
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"auto_name": "# your project folder that we can `c [tab]` to",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "micktastic/functions.zsh",
					"settings":
					{
						"buffer_size": 657,
						"regions":
						{
						},
						"selection":
						[
							[
								546,
								546
							]
						],
						"settings":
						{
							"auto_name": "# Commands",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "micktastic/git/completions.zsh",
					"settings":
					{
						"buffer_size": 70,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"auto_name": "_git_delb()",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "micktastic/git/aliases.zsh",
					"settings":
					{
						"buffer_size": 53,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								0
							]
						],
						"settings":
						{
							"auto_name": "#",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "micktastic/directories/aliases.zsh",
					"settings":
					{
						"buffer_size": 263,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "micktastic/svn/aliases.zsh",
					"settings":
					{
						"buffer_size": 72,
						"regions":
						{
						},
						"selection":
						[
							[
								68,
								68
							]
						],
						"settings":
						{
							"auto_name": "#",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "micktastic/directories/functions.zsh",
					"settings":
					{
						"buffer_size": 387,
						"regions":
						{
						},
						"selection":
						[
							[
								387,
								387
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"settings":
					{
						"buffer_size": 45272,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										95,
										98
									],
									[
										295,
										298
									],
									[
										550,
										553
									],
									[
										657,
										660
									],
									[
										769,
										772
									],
									[
										1008,
										1011
									],
									[
										1069,
										1072
									],
									[
										1177,
										1180
									],
									[
										1629,
										1632
									],
									[
										2012,
										2015
									],
									[
										2199,
										2202
									],
									[
										2217,
										2220
									],
									[
										2274,
										2277
									],
									[
										2343,
										2346
									],
									[
										2371,
										2374
									],
									[
										2538,
										2541
									],
									[
										2571,
										2574
									],
									[
										2593,
										2596
									],
									[
										2843,
										2846
									],
									[
										3371,
										3374
									],
									[
										3566,
										3569
									],
									[
										3599,
										3602
									],
									[
										3763,
										3766
									],
									[
										3794,
										3797
									],
									[
										4012,
										4015
									],
									[
										4340,
										4343
									],
									[
										4441,
										4444
									],
									[
										4661,
										4664
									],
									[
										4701,
										4704
									],
									[
										4785,
										4788
									],
									[
										4930,
										4933
									],
									[
										5007,
										5010
									],
									[
										5121,
										5124
									],
									[
										5157,
										5160
									],
									[
										5394,
										5397
									],
									[
										5469,
										5472
									],
									[
										5787,
										5790
									],
									[
										6065,
										6068
									],
									[
										6489,
										6492
									],
									[
										6630,
										6633
									],
									[
										6715,
										6718
									],
									[
										6816,
										6819
									],
									[
										7043,
										7046
									],
									[
										7334,
										7337
									],
									[
										7671,
										7674
									],
									[
										7700,
										7703
									],
									[
										8050,
										8053
									],
									[
										8173,
										8176
									],
									[
										8358,
										8361
									],
									[
										8529,
										8532
									],
									[
										8589,
										8592
									],
									[
										8793,
										8796
									],
									[
										8827,
										8830
									],
									[
										8867,
										8870
									],
									[
										8949,
										8952
									],
									[
										9222,
										9225
									],
									[
										9460,
										9463
									],
									[
										9805,
										9808
									],
									[
										9921,
										9924
									],
									[
										10072,
										10075
									],
									[
										10200,
										10203
									],
									[
										10374,
										10377
									],
									[
										10417,
										10420
									],
									[
										10519,
										10522
									],
									[
										10830,
										10833
									],
									[
										10982,
										10985
									],
									[
										11006,
										11009
									],
									[
										11101,
										11104
									],
									[
										11118,
										11121
									],
									[
										11200,
										11203
									],
									[
										11217,
										11220
									],
									[
										11295,
										11298
									],
									[
										11312,
										11315
									],
									[
										11443,
										11446
									],
									[
										11560,
										11563
									],
									[
										11577,
										11580
									],
									[
										11659,
										11662
									],
									[
										11676,
										11679
									],
									[
										11754,
										11757
									],
									[
										11771,
										11774
									],
									[
										11861,
										11864
									],
									[
										12049,
										12052
									],
									[
										12190,
										12193
									],
									[
										12261,
										12264
									],
									[
										12377,
										12380
									],
									[
										12430,
										12433
									],
									[
										12496,
										12499
									],
									[
										12615,
										12618
									],
									[
										12688,
										12691
									],
									[
										12717,
										12720
									],
									[
										13009,
										13012
									],
									[
										13220,
										13223
									],
									[
										13400,
										13403
									],
									[
										13428,
										13431
									],
									[
										13451,
										13454
									],
									[
										13504,
										13507
									],
									[
										13864,
										13867
									],
									[
										14198,
										14201
									],
									[
										14307,
										14310
									],
									[
										14676,
										14679
									],
									[
										15101,
										15104
									],
									[
										15327,
										15330
									],
									[
										16125,
										16128
									],
									[
										16302,
										16305
									],
									[
										16794,
										16797
									],
									[
										17192,
										17195
									],
									[
										17748,
										17751
									],
									[
										18099,
										18102
									],
									[
										18473,
										18476
									],
									[
										18848,
										18851
									],
									[
										19163,
										19166
									],
									[
										19420,
										19423
									],
									[
										19713,
										19716
									],
									[
										19847,
										19850
									],
									[
										20164,
										20167
									],
									[
										20204,
										20207
									],
									[
										20754,
										20757
									],
									[
										21129,
										21132
									],
									[
										21522,
										21525
									],
									[
										21569,
										21572
									],
									[
										21914,
										21917
									],
									[
										22033,
										22036
									],
									[
										22380,
										22383
									],
									[
										22692,
										22695
									],
									[
										22874,
										22877
									],
									[
										23054,
										23057
									],
									[
										23135,
										23138
									],
									[
										23342,
										23345
									],
									[
										23490,
										23493
									],
									[
										23632,
										23635
									],
									[
										23657,
										23660
									],
									[
										23713,
										23716
									],
									[
										23755,
										23758
									],
									[
										23967,
										23970
									],
									[
										24293,
										24296
									],
									[
										24436,
										24439
									],
									[
										24540,
										24543
									],
									[
										24724,
										24727
									],
									[
										24903,
										24906
									],
									[
										24946,
										24949
									],
									[
										25067,
										25070
									],
									[
										25291,
										25294
									],
									[
										25462,
										25465
									],
									[
										25759,
										25762
									],
									[
										25943,
										25946
									],
									[
										26195,
										26198
									],
									[
										26446,
										26449
									],
									[
										26679,
										26682
									],
									[
										26953,
										26956
									],
									[
										29341,
										29344
									],
									[
										29528,
										29531
									],
									[
										29697,
										29700
									],
									[
										29843,
										29846
									],
									[
										30101,
										30104
									],
									[
										30524,
										30527
									],
									[
										30632,
										30635
									],
									[
										31259,
										31262
									],
									[
										31335,
										31338
									],
									[
										31565,
										31568
									],
									[
										32085,
										32088
									],
									[
										32211,
										32214
									],
									[
										32311,
										32314
									],
									[
										33065,
										33068
									],
									[
										33244,
										33247
									],
									[
										33830,
										33833
									],
									[
										34149,
										34152
									],
									[
										34286,
										34289
									],
									[
										34459,
										34462
									],
									[
										34956,
										34959
									],
									[
										34973,
										34976
									],
									[
										35504,
										35507
									],
									[
										36325,
										36328
									],
									[
										36379,
										36382
									],
									[
										36985,
										36988
									],
									[
										37351,
										37354
									],
									[
										37508,
										37511
									],
									[
										37701,
										37704
									],
									[
										37753,
										37756
									],
									[
										37939,
										37942
									],
									[
										38351,
										38354
									],
									[
										38405,
										38408
									],
									[
										38551,
										38554
									],
									[
										38751,
										38754
									],
									[
										38838,
										38841
									],
									[
										39113,
										39116
									],
									[
										39905,
										39908
									],
									[
										40415,
										40418
									],
									[
										40613,
										40616
									],
									[
										40629,
										40632
									],
									[
										40764,
										40767
									],
									[
										40967,
										40970
									],
									[
										41074,
										41077
									],
									[
										41182,
										41185
									],
									[
										41518,
										41521
									],
									[
										41832,
										41835
									],
									[
										42031,
										42034
									],
									[
										42265,
										42275
									],
									[
										43797,
										43807
									],
									[
										44041,
										44051
									],
									[
										44269,
										44279
									],
									[
										44396,
										44406
									],
									[
										44548,
										44558
									],
									[
										44931,
										44941
									],
									[
										45171,
										45181
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								45171,
								45181
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2144.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "micktastic/git/functions.zsh",
					"settings":
					{
						"buffer_size": 2227,
						"regions":
						{
						},
						"selection":
						[
							[
								1575,
								1575
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 1.0,
						"translation.y": 899.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "micktastic/git/wordpress-plugin-git-flow-svn-deploy/deploy.sh",
					"settings":
					{
						"buffer_size": 5688,
						"regions":
						{
						},
						"selection":
						[
							[
								2042,
								2049
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "script/bootstrap",
					"settings":
					{
						"buffer_size": 2971,
						"regions":
						{
						},
						"selection":
						[
							[
								396,
								398
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 138.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "zsh/zshrc.symlink",
					"settings":
					{
						"buffer_size": 826,
						"regions":
						{
						},
						"selection":
						[
							[
								109,
								110
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "micktastic/directories/functions copy.zsh",
					"settings":
					{
						"buffer_size": 488,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "osx/set-defaults.sh",
					"settings":
					{
						"buffer_size": 1170,
						"regions":
						{
						},
						"selection":
						[
							[
								1088,
								1091
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "bin/dot",
					"settings":
					{
						"buffer_size": 310,
						"regions":
						{
						},
						"selection":
						[
							[
								295,
								302
							]
						],
						"settings":
						{
							"syntax": "Packages/Graphviz/DOT.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "script/install",
					"settings":
					{
						"buffer_size": 212,
						"regions":
						{
						},
						"selection":
						[
							[
								84,
								84
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "micktastic/vagrant/aliases.zsh",
					"settings":
					{
						"buffer_size": 94,
						"regions":
						{
						},
						"selection":
						[
							[
								93,
								93
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"bo",
				"script/bootstrap"
			],
			[
				"install",
				"script/install"
			],
			[
				"dot",
				"bin/dot"
			],
			[
				"boot",
				"script/bootstrap"
			],
			[
				"dep",
				"/Users/mickey/.dotfiles/micktastic/git/wordpress-plugin-git-flow-svn-deploy/deploy.sh"
			],
			[
				"functions",
				"micktastic/directories/functions copy.zsh"
			],
			[
				"zsh",
				"zsh/zshrc.symlink"
			],
			[
				"depl",
				"micktastic/git/wordpress-plugin-git-flow-svn-deploy/deploy.sh"
			],
			[
				"read",
				"README.md"
			],
			[
				"function",
				"micktastic/directories/functions.zsh"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/Users/mickey/Sites/vagrant-local/www/wordpress-default/VVV - WP Default.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 264.0,
	"status_bar_visible": true
}
